\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k+kn}{package} \PYG{n+nn}{ywrhee.project}\PYG{p}{;}

\PYG{k+kn}{import} \PYG{n+nn}{java.io.File}\PYG{p}{;}
\PYG{k+kn}{import} \PYG{n+nn}{java.io.FileWriter}\PYG{p}{;}
\PYG{k+kn}{import} \PYG{n+nn}{java.io.IOException}\PYG{p}{;}
\PYG{k+kn}{import} \PYG{n+nn}{java.util.ArrayList}\PYG{p}{;}
\PYG{k+kn}{import} \PYG{n+nn}{java.util.Scanner}\PYG{p}{;}

\PYG{k+kd}{public} \PYG{k+kd}{class} \PYG{n+nc}{StatisticUtil} \PYG{p}{\PYGZob{}}

    \PYG{k+kd}{private} \PYG{k+kd}{static} \PYG{n}{ArrayList}\PYG{o}{\PYGZlt{}}\PYG{n}{Game}\PYG{o}{\PYGZgt{}} \PYG{n}{statisticList}\PYG{p}{;}
    \PYG{k+kd}{private} \PYG{k+kd}{static} \PYG{n}{FileWriter} \PYG{n}{statisticWriter}\PYG{p}{;}

    \PYG{c+cm}{/**}
\PYG{c+cm}{     * Get saved statistic information from statistics.txt and save it to statisticList}
\PYG{c+cm}{     */}
    \PYG{k+kd}{public} \PYG{k+kd}{static} \PYG{k+kt}{void} \PYG{n+nf}{init}\PYG{p}{()} \PYG{p}{\PYGZob{}}
        \PYG{n}{statisticList} \PYG{o}{=} \PYG{k}{new} \PYG{n}{ArrayList}\PYG{o}{\PYGZlt{}\PYGZgt{}}\PYG{p}{();}
        \PYG{n}{File} \PYG{n}{statisticFile}\PYG{p}{;}
        \PYG{k}{try} \PYG{p}{\PYGZob{}}
            \PYG{n}{statisticFile} \PYG{o}{=} \PYG{k}{new} \PYG{n}{File}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}/statistics.txt\PYGZdq{}}\PYG{p}{);}

            \PYG{k}{if} \PYG{p}{(}\PYG{o}{!}\PYG{n}{statisticFile}\PYG{p}{.}\PYG{n+na}{exists}\PYG{p}{())} \PYG{n}{statisticFile}\PYG{p}{.}\PYG{n+na}{createNewFile}\PYG{p}{();}

            \PYG{n}{statisticWriter} \PYG{o}{=} \PYG{k}{new} \PYG{n}{FileWriter}\PYG{p}{(}\PYG{n}{statisticFile}\PYG{p}{,} \PYG{k+kc}{true}\PYG{p}{);}

            \PYG{n}{Scanner} \PYG{n}{statisticScanner} \PYG{o}{=} \PYG{k}{new} \PYG{n}{Scanner}\PYG{p}{(}\PYG{n}{statisticFile}\PYG{p}{);}
            \PYG{k}{while}\PYG{p}{(}\PYG{n}{statisticScanner}\PYG{p}{.}\PYG{n+na}{hasNextLine}\PYG{p}{())} \PYG{p}{\PYGZob{}}
                \PYG{n}{String} \PYG{n}{str} \PYG{o}{=} \PYG{n}{statisticScanner}\PYG{p}{.}\PYG{n+na}{nextLine}\PYG{p}{();}
                \PYG{n}{statisticList}\PYG{p}{.}\PYG{n+na}{add}\PYG{p}{(}\PYG{n}{Game}\PYG{p}{.}\PYG{n+na}{parseGameInfo}\PYG{p}{(}\PYG{n}{str}\PYG{p}{));}
            \PYG{p}{\PYGZcb{}}

        \PYG{p}{\PYGZcb{}} \PYG{k}{catch} \PYG{p}{(}\PYG{n}{IOException} \PYG{n}{e}\PYG{p}{)} \PYG{p}{\PYGZob{}}
            \PYG{n}{e}\PYG{p}{.}\PYG{n+na}{printStackTrace}\PYG{p}{();}
        \PYG{p}{\PYGZcb{}}
    \PYG{p}{\PYGZcb{}}

    \PYG{k+kd}{public} \PYG{k+kd}{static} \PYG{n}{ArrayList}\PYG{o}{\PYGZlt{}}\PYG{n}{Game}\PYG{o}{\PYGZgt{}} \PYG{n+nf}{getStatisticList}\PYG{p}{()} \PYG{p}{\PYGZob{}}
        \PYG{k}{return} \PYG{n}{statisticList}\PYG{p}{;}
    \PYG{p}{\PYGZcb{}}

    \PYG{k+kd}{public} \PYG{k+kd}{static} \PYG{k+kt}{void} \PYG{n+nf}{addToStatisticList}\PYG{p}{(}\PYG{n}{Game} \PYG{n}{game}\PYG{p}{)} \PYG{p}{\PYGZob{}}
        \PYG{n}{statisticList}\PYG{p}{.}\PYG{n+na}{add}\PYG{p}{(}\PYG{n}{game}\PYG{p}{);}
    \PYG{p}{\PYGZcb{}}

    \PYG{c+cm}{/**}
\PYG{c+cm}{     * Save Game information into the file as CSV formatted string}
\PYG{c+cm}{     * @param game Game object to save in the file}
\PYG{c+cm}{     */}
    \PYG{k+kd}{public} \PYG{k+kd}{static} \PYG{k+kt}{void} \PYG{n+nf}{writeStatistic}\PYG{p}{(}\PYG{n}{Game} \PYG{n}{game}\PYG{p}{)} \PYG{p}{\PYGZob{}}
        \PYG{k}{try} \PYG{p}{\PYGZob{}}
            \PYG{n}{statisticWriter}\PYG{p}{.}\PYG{n+na}{write}\PYG{p}{(}\PYG{n}{game}\PYG{p}{.}\PYG{n+na}{getCsvInfo}\PYG{p}{());}
            \PYG{n}{statisticWriter}\PYG{p}{.}\PYG{n+na}{flush}\PYG{p}{();}
        \PYG{p}{\PYGZcb{}} \PYG{k}{catch} \PYG{p}{(}\PYG{n}{IOException} \PYG{n}{e}\PYG{p}{)} \PYG{p}{\PYGZob{}}
            \PYG{n}{e}\PYG{p}{.}\PYG{n+na}{printStackTrace}\PYG{p}{();}
        \PYG{p}{\PYGZcb{}}
    \PYG{p}{\PYGZcb{}}

    \PYG{k+kd}{public} \PYG{k+kd}{static} \PYG{k+kt}{void} \PYG{n+nf}{closeStatisticWriterStream}\PYG{p}{()} \PYG{p}{\PYGZob{}}
        \PYG{k}{try} \PYG{p}{\PYGZob{}}
            \PYG{n}{statisticWriter}\PYG{p}{.}\PYG{n+na}{close}\PYG{p}{();}
        \PYG{p}{\PYGZcb{}} \PYG{k}{catch} \PYG{p}{(}\PYG{n}{IOException} \PYG{n}{e}\PYG{p}{)} \PYG{p}{\PYGZob{}}
            \PYG{n}{e}\PYG{p}{.}\PYG{n+na}{printStackTrace}\PYG{p}{();}
        \PYG{p}{\PYGZcb{}}
    \PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}
\end{Verbatim}
